############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line

#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
# PID_CALIBRATE HEATER=extruder TARGET=200
# PID_CALIBRATE HEATER=heater_bed TARGET=60
[extruder]
control: pid
pid_kp: 24.737 #28.644
pid_ki: 2.390 #1.969
pid_kd: 64.010 #104.199
min_extrude_temp: 185
microsteps: 16                       # ADDED
max_extrude_only_distance: 500       # ADDED
max_extrude_only_velocity: 120       # ADDED
pressure_advance: 0.042              # ADDED Calib
pressure_advance_smooth_time: 0.03   # ADDED Calib
#control: watermark

[tmc2209 extruder]
interpolate: true
run_current: 0.85 #**
sense_resistor: 0.11 #**
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

[heater_bed]
control: pid
pid_kp: 65.121
pid_ki: 1.847
pid_kd: 573.883

#-------------------------#
#   Input Shaper          #
#-------------------------#
[input_shaper]
# Supported shapers: zv, mzv, zvd, ei, 2hump_ei, 3hump_ei Recommended is MZV
shaper_freq_x: 80.0 #56.4
shaper_type_x: mzv #zv
shaper_freq_y: 73.0 #25.6 #38.4
shaper_type_y: 3hump_ei

#-------------------------#
#   X STEPPER             #
#-------------------------#
[stepper_x]
dir_pin: !X_DIR
homing_speed: 60
position_endstop: 353 #345 #353
position_max: 353 #345 #353
position_min: 0
rotation_distance: 40.4 # 40    Rotation_distance = previouss_rotation_distance * Actual_Distance_travelled / Requested_Distance_travelled


#[tmc2209 stepper_x]
#driver_SGTHRS: 140 #135 #155    # Defines the sensorless homing sensitivity 0 - 255 (255 being max)

#-------------------------#
#   Y STEPPER             #
#-------------------------#
[stepper_y]
dir_pin: !Y_DIR
homing_speed: 60
position_endstop: 357 #348 #357
position_max: 357 #350 #357
position_min: -9

#[tmc2209 stepper_y]
#driver_SGTHRS: 160 #130    # Defines the sensorless homing sensitivity 0 - 255 (255 being max)

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
[stepper_z]
dir_pin: !Z_DIR
position_max: 310
position_min: -10.000
#endstop_pin: probe:z_virtual_endstop # use beacon as virtual endstop
#homing_retract_dist: 0 # beacon needs this to be set to 0

# [stepper_z1]
# dir_pin: !Z1_DIR

[stepper_z2]
dir_pin: !Z2_DIR

# [stepper_z3]
# dir_pin: !Z3_DIR


#-------------------------#
#   Probe Offsets         #
#-------------------------#

# REMOVED FOR BEACON
### Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
### and many will need them during setup. If you need to set these, just uncomment the following lines.
#[probe]
##pin: ^toolhead:PROBE_INPUT
#x_offset: 0.0
#y_offset: 0.0
#z_offset: -0.700 #-0.700 #-0.790 #-0.740 #-0.690 #-0.660 #-0.708 #-0.681 #0.0 #0.467 #0.704 #4.992

#-------------------------#
#    Fan overrides        #
#-------------------------#
[controller_fan controller_fan]
tachometer_pin: MCU_FAN4_TACH

#[fan]
#pin: toolhead:PART_FAN
#
#[heater_fan hotend_fan]
#pin: toolhead:E_FAN

#-------------------------#
#    Heater Bed           #
#-------------------------#
[heater_bed]
#control: watermark

#-------------------------#
#    LED                  #
#-------------------------#
[output_pin nightlight]
pin: LIGHT_NIGHT
pwm: true
value: 0
#scale: 100
cycle_time: 0.001
hardware_pwm: True

[neopixel caselight]
pin: LIGHT_NEOPIXEL_L
chain_count: 18
color_order: GRBW

[neopixel caselight_R]
pin: LIGHT_NEOPIXEL_R
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 18
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). The default is
#   GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   See the "led" section for information on these parameters.
initial_WHITE: 0.0


#[output_pin BEEPER_pin]
#pin: PC0
#pwm: True
#value: 0
#shutdown_value: 0
#cycle_time: 0.001
#scale: 2000
#
#[gcode_macro M300]
#gcode:
#  {% set S = params.S|default(1000)|int %}
#   #default_parameter_S=1000
#  {% set P = params.P|default(100)|int %}
#   #default_parameter_P=100
#  SET_PIN PIN=BEEPER_pin VALUE={S}
#  G4 P{P}
#  SET_PIN PIN=BEEPER_pin VALUE=0

#[beacon]
#serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_C41364605154364134202020FF141B08-if00
#x_offset: 0 # update with offset from nozzle on your machine
#y_offset: 34 # update with offset from nozzle on your machine
#mesh_main_direction: x
#mesh_runs: 2
#contact_max_hotend_temperature: 150  # increase to probe at print temps
#home_xy_position: 175, 175 # update with your safe position
#home_z_hop: 5
#home_z_hop_speed: 30
#home_xy_move_speed: 300
#home_method: contact # use proximity for induction homing
#home_method_when_homed: proximity # after initial calibration use induction
#home_autocalibrate: unhomed # contact will calibrate beacon on first home
